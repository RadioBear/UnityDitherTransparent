//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 vEye;                       // Offset:    0 Size:    16
//   float4 cSpec;                      // Offset:   16 Size:    16
//   float4 vDithAlp;                   // Offset:   32 Size:    16
//   float4 vOcRange;                   // Offset:   48 Size:    16
//      = 0x43c80000 0x40000000 0x00000000 0x3f4ccccd 
//   float4 vOcTarget;                  // Offset:   64 Size:    16
//      = 0x00000000 0x00000000 0x00000000 0x00000000 
//   float4 mWV[3];                     // Offset:   80 Size:    48
//   float vATest;                      // Offset:  128 Size:     4
//   int nMtrID;                        // Offset:  132 Size:     4
//      = 0x00000000 
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __smpsStage0                      sampler      NA          NA             s0      1 
// __smpsRefRough                    sampler      NA          NA             s1      1 
// __smpsOcc                         sampler      NA          NA             s2      1 
// __smpsNMap                        sampler      NA          NA             s3      1 
// sStage0                           texture  float4          2d             t0      1 
// sRefRough                         texture  float4          2d             t1      1 
// sOcc                              texture  float4          2d             t2      1 
// sNMap                             texture  float4          2d             t3      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyzw        1     NONE   float   xy w
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
// SV_Target                5   xyzw        5   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 0.031250, 0, 0, 0},
                              { 0.531250, 0, 0, 0},
                              { 0.156250, 0, 0, 0},
                              { 0.656250, 0, 0, 0},
                              { 0.781250, 0, 0, 0},
                              { 0.281250, 0, 0, 0},
                              { 0.906250, 0, 0, 0},
                              { 0.406250, 0, 0, 0},
                              { 0.218750, 0, 0, 0},
                              { 0.718750, 0, 0, 0},
                              { 0.093750, 0, 0, 0},
                              { 0.593750, 0, 0, 0},
                              { 0.968750, 0, 0, 0},
                              { 0.468750, 0, 0, 0},
                              { 0.843750, 0, 0, 0},
                              { 0.343750, 0, 0, 0} }
dcl_constantbuffer CB0[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v1.xyw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_temps 6
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v6.xyxx, t0.xyzw, s0
add r0.w, r0.w, -cb0[8].x
mov o0.xyz, r0.xyzx
lt r0.x, r0.w, l(0.000000)
discard_nz r0.x
add r0.xyz, v2.xyzx, -cb0[4].xyzx
add r1.xyz, cb0[0].xyzx, -cb0[4].xyzx
dp3 r0.w, r1.xyzx, r0.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
div r2.x, r0.w, r1.w
ge r0.w, r0.w, l(0.000000)
mul r2.yzw, r1.xxyz, r2.xxxx
mad r0.xyz, r2.xxxx, r1.xyzx, -r0.xyzx
dp3 r1.x, r2.yzwy, r2.yzwy
sqrt r1.xw, r1.xxxw
div r1.x, r1.x, r1.w
add r1.x, -r1.x, l(1.000000)
mad r1.x, -r1.x, r1.x, l(1.000000)
mul r1.x, r1.x, cb0[3].x
mul r1.y, r1.x, r1.x
mul r1.x, r1.x, cb0[3].y
mul r1.x, r1.x, r1.x
dp2 r1.z, r0.xzxx, r0.xzxx
dp3 r0.x, r0.xyzx, r0.xyzx
div r0.y, r1.z, r1.y
min r0.y, r0.y, l(1.000000)
add r0.y, -r0.y, l(1.000000)
mul r0.y, r0.y, r1.x
sqrt r0.xy, r0.xyxx
div r0.z, r0.x, r0.y
lt r0.x, r0.x, r0.y
add r0.y, r0.z, -cb0[3].w
add r1.xy, -cb0[3].wzww, l(1.000000, 1.000000, 0.000000, 0.000000)
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
mul_sat r0.y, r0.z, r0.y
mad r0.z, r0.y, l(-2.000000), l(3.000000)
mul r0.y, r0.y, r0.y
mul r0.y, r0.y, r0.z
mad r0.y, r1.y, r0.y, cb0[3].z
movc r0.x, r0.x, r0.y, l(1.000000)
movc r0.x, r0.w, r0.x, l(1.000000)
lt r0.y, cb0[3].z, l(1.000000)
movc r0.x, r0.y, r0.x, l(1.000000)
round_ni r0.yz, v0.xxyx
ftou r0.yz, r0.yyzy
bfi r0.z, l(2), l(2), r0.z, l(0)
bfi r0.y, l(2), l(0), r0.y, r0.z
mad r0.x, cb0[2].w, r0.x, -icb[r0.y + 0].x
lt r0.x, r0.x, l(0.000000)
discard_nz r0.x
itof r0.x, cb0[8].y
ftou r0.x, r0.x
ishl r0.x, r0.x, l(8)
utof r0.x, r0.x
mul o1.w, r0.x, l(0.000015)
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v6.xyxx, t3.xyzw, s3
mad r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, v4.xyzx, v4.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, v4.zxyz
mul r2.xyz, r0.yyyy, r1.yzxy
dp3 r0.y, v5.xyzx, v5.xyzx
rsq r0.y, r0.y
mul r3.xyz, r0.yyyy, v5.zxyz
mul r4.xyz, r1.xyzx, r3.zxyz
mad r4.xyz, r1.zxyz, r3.xyzx, -r4.xyzx
mul r4.xyz, r4.xyzx, v3.wwww
mad r0.xyw, r4.xyxz, r0.xxxx, r2.xyxz
mad r0.xyz, r3.yzxy, r0.zzzz, r0.xywx
dp3 r2.y, cb0[5].xyzx, r0.xyzx
dp3 r2.z, cb0[6].xyzx, r0.xyzx
add r0.w, |r2.z|, |r2.y|
dp3 r2.x, cb0[7].xyzx, r0.xyzx
add r0.w, r0.w, |r2.x|
div r2.xyz, r2.xyzx, r0.wwww
add r4.xy, -|r2.zyzz|, l(1.000000, 1.000000, 0.000000, 0.000000)
ge r5.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r2.xw, r5.yyyz, l(1.000000,0,0,1.000000), l(-1.000000,0,0,-1.000000)
mul r2.xw, r2.xxxw, r4.xxxy
movc r2.xy, r5.xxxx, r2.yzyy, r2.xwxx
mad o1.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mov o1.z, l(0)
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v6.xyxx, t1.xyzw, s1
mul r2.xyzw, r2.xyzw, cb0[1].xyzw
mul o2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 0.500000)
mov o3.xyzw, l(0,0,0,0)
add r0.w, |r3.z|, |r3.y|
add r0.w, |r3.x|, r0.w
div r2.xyz, r3.xyzx, r0.wwww
add r3.xy, -|r2.zyzz|, l(1.000000, 1.000000, 0.000000, 0.000000)
ge r4.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r2.xw, r4.yyyz, l(1.000000,0,0,1.000000), l(-1.000000,0,0,-1.000000)
mul r2.xw, r2.xxxw, r3.xxxy
movc r2.xy, r4.xxxx, r2.yzyy, r2.xwxx
mad o4.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
dp3 r0.w, r1.yzxy, r0.xyzx
mad r0.xyz, -r0.wwww, r0.zxyz, r1.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
add r0.w, |r0.z|, |r0.y|
add r0.w, |r0.x|, r0.w
div r0.xyz, r0.xyzx, r0.wwww
add r1.xy, -|r0.zyzz|, l(1.000000, 1.000000, 0.000000, 0.000000)
ge r2.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r0.xw, r2.yyyz, l(1.000000,0,0,1.000000), l(-1.000000,0,0,-1.000000)
mul r0.xw, r0.xxxw, r1.xxxy
movc r0.xy, r2.xxxx, r0.yzyy, r0.xwxx
mad o4.zw, r0.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
div r0.xy, v1.xyxx, v1.wwww
div r0.zw, v3.xxxy, v3.zzzz
add r0.xy, -r0.zwzz, r0.xyxx
mul o5.xy, r0.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000)
mov o5.zw, l(0,0,0,0)
sample_indexable(texture2d)(float,float,float,float) r0.x, v6.xyxx, t2.xyzw, s2
mov o0.w, r0.x
ret 
// Approximately 120 instruction slots used